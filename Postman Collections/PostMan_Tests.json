{
	"info": {
		"_postman_id": "d86d6583-6c0b-434b-988a-694e480e10ff",
		"name": "breweryApis",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "https://api.openbrewerydb.org/v1/breweries",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e554e780-1431-4f1b-b223-377f82004302",
						"exec": [
							"// Test 1: Status Code Check\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"// Test 2: Content-Type Header Check\r",
							"pm.test(\"Content-Type is application/json\", function () {\r",
							"    pm.response.to.have.header(\"Content-Type\", 'application/json; charset=utf-8');\r",
							"});\r",
							"\r",
							"// Test 3: Extract Brewery IDs\r",
							"pm.test(\"Extract the Brewery Id's\", function () {\r",
							"const breweryData = pm.response.json();\r",
							"const breweryIds = breweryData.map(brewery => brewery.id);\r",
							"console.log(\"Brewery IDs:\", breweryIds);\r",
							"})\r",
							"\r",
							"\r",
							"//Test 4: Fetch Details for Single Brewery (replace '123' with an actual ID)\r",
							"const singleBreweryId = \"5128df48-79fc-4f0f-8b52-d06be54d0cec\"; // Replace with an actual ID\r",
							"const singleBreweryUrl = `https://api.openbrewerydb.org/v1/breweries/${singleBreweryId}`;\r",
							"pm.sendRequest(singleBreweryUrl, function (response) {\r",
							"    pm.test(\"Single Brewery Details\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"        pm.response.to.have.header(\"Content-Type\", 'application/json; charset=utf-8');\r",
							"        console.log(\"Full Response:\", response);\r",
							"        var singleBreweryDetails = pm.response.json();\r",
							"        console.log(\"Single Brewery Details:\", singleBreweryDetails);\r",
							"    });\r",
							"});\r",
							"\r",
							"// Test 5: Fetch Details for Multiple Breweries by IDs\r",
							"const multipleBreweryIds = [\"34e8c68b-6146-453f-a4b9-1f6cd99a5ada\", \"e2e78bd8-80ff-4a61-a65c-3bfbd9d76ce2\"]\r",
							"const multipleBreweryIdsStr = multipleBreweryIds.join(\",\");\r",
							"const multipleBreweryUrl = `https://api.openbrewerydb.org/v1/breweries?by_ids=${multipleBreweryIdsStr}`;\r",
							"pm.sendRequest(multipleBreweryUrl, function (response) {\r",
							"    pm.test(\"Multiple Brewery Details\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"        pm.response.to.have.header(\"Content-Type\", 'application/json; charset=utf-8');\r",
							"        var multipleBreweryDetails = pm.response.json();\r",
							"        console.log(\"Multiple Brewery Details:\", multipleBreweryDetails);\r",
							"    });\r",
							"});\r",
							"\r",
							"// Test 6: Validate Brewery Types \r",
							"const by_type = [\"micro\", \"nano\", \"regional\",\"brewpub\",\"large\",\"planning\",\"bar\",\"contract\",\"closed\"];\r",
							"    const responseJsonvalue = pm.response.json();\r",
							"const expectedType = pm.request.url.query.get(\"by_type\"); \r",
							"pm.test(\"Response contains the expected type\", function () {\r",
							"    pm.expect(responseJsonvalue.some(brewery => brewery.type === expectedType)).to.be.true;\r",
							"})\r",
							"\r",
							"\r",
							"// Test 7: Sort Check (for example URL)\r",
							"const exampleUrl = \"https://api.openbrewerydb.org/v1/breweries?sort=city:asc\";\r",
							"const responseJson = pm.response.json();\r",
							"const cities = responseJson.map(brewery => brewery.city);\r",
							"const sortedCities = [...cities].sort(); // Create a sorted copy of cities\r",
							"const isSorted = sortedCities.every((city, index) => index === 0 || city >= sortedCities[index - 1])\r",
							"pm.test(\"Breweries are sorted by city in ascending order\", function () {\r",
							"    pm.expect(isSorted).to.be.true;\r",
							"\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"id": "436c33ee-c5f6-48c9-8190-9c0a794402a7",
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"url": "https://api.openbrewerydb.org/v1/breweries"
			},
			"response": []
		}
	]
}